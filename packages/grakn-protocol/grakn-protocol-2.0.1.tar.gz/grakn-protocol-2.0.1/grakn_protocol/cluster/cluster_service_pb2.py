# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cluster/cluster_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from grakn_protocol.cluster import cluster_server_pb2 as cluster_dot_cluster__server__pb2
from grakn_protocol.cluster import cluster_database_pb2 as cluster_dot_cluster__database__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cluster/cluster_service.proto',
  package='grakn.protocol',
  syntax='proto3',
  serialized_options=_b('\n\016grakn.protocolB\023ClusterServiceProto\210\001\001'),
  serialized_pb=_b('\n\x1d\x63luster/cluster_service.proto\x12\x0egrakn.protocol\x1a\x1c\x63luster/cluster_server.proto\x1a\x1e\x63luster/cluster_database.proto2\xcd\x02\n\x0cGraknCluster\x12[\n\x0bservers_all\x12%.grakn.protocol.ServerManager.All.Req\x1a%.grakn.protocol.ServerManager.All.Res\x12o\n\rdatabases_get\x12..grakn.protocol.ClusterDatabaseManager.Get.Req\x1a..grakn.protocol.ClusterDatabaseManager.Get.Res\x12o\n\rdatabases_all\x12..grakn.protocol.ClusterDatabaseManager.All.Req\x1a..grakn.protocol.ClusterDatabaseManager.All.ResB(\n\x0egrakn.protocolB\x13\x43lusterServiceProto\x88\x01\x01\x62\x06proto3')
  ,
  dependencies=[cluster_dot_cluster__server__pb2.DESCRIPTOR,cluster_dot_cluster__database__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None

_GRAKNCLUSTER = _descriptor.ServiceDescriptor(
  name='GraknCluster',
  full_name='grakn.protocol.GraknCluster',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=112,
  serialized_end=445,
  methods=[
  _descriptor.MethodDescriptor(
    name='servers_all',
    full_name='grakn.protocol.GraknCluster.servers_all',
    index=0,
    containing_service=None,
    input_type=cluster_dot_cluster__server__pb2._SERVERMANAGER_ALL_REQ,
    output_type=cluster_dot_cluster__server__pb2._SERVERMANAGER_ALL_RES,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='databases_get',
    full_name='grakn.protocol.GraknCluster.databases_get',
    index=1,
    containing_service=None,
    input_type=cluster_dot_cluster__database__pb2._CLUSTERDATABASEMANAGER_GET_REQ,
    output_type=cluster_dot_cluster__database__pb2._CLUSTERDATABASEMANAGER_GET_RES,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='databases_all',
    full_name='grakn.protocol.GraknCluster.databases_all',
    index=2,
    containing_service=None,
    input_type=cluster_dot_cluster__database__pb2._CLUSTERDATABASEMANAGER_ALL_REQ,
    output_type=cluster_dot_cluster__database__pb2._CLUSTERDATABASEMANAGER_ALL_RES,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GRAKNCLUSTER)

DESCRIPTOR.services_by_name['GraknCluster'] = _GRAKNCLUSTER

# @@protoc_insertion_point(module_scope)
