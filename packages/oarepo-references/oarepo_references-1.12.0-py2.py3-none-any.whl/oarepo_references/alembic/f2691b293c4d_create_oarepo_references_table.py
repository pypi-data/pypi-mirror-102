#
# This file is part of Invenio.
# Copyright (C) 2016-2018 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""Create oarepo_references table."""

import sqlalchemy_utils

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'f2691b293c4d'
down_revision = '27aff3739ced'
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oarepo_references_classname',
    sa.Column('created', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), nullable=False),
    sa.Column('updated', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_oarepo_references_classname'))
    )
    op.create_index(op.f('ix_oarepo_references_classname_name'), 'oarepo_references_classname', ['name'], unique=True)
    op.create_table('oarepo_references_version',
    sa.Column('created', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), autoincrement=False, nullable=True),
    sa.Column('updated', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), autoincrement=False, nullable=True),
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(), autoincrement=False, nullable=False),
    sa.Column('record_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('reference', sa.String(length=255), autoincrement=False, nullable=True),
    sa.Column('reference_uuid', sqlalchemy_utils.types.uuid.UUIDType(), autoincrement=False, nullable=True),
    sa.Column('inline', sa.Boolean(name='ck_oarepo_references_inline'), autoincrement=False, nullable=True),
    sa.Column('version_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name=op.f('pk_oarepo_references_version'))
    )
    op.create_index(op.f('ix_oarepo_references_version_end_transaction_id'), 'oarepo_references_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_oarepo_references_version_operation_type'), 'oarepo_references_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_oarepo_references_version_reference'), 'oarepo_references_version', ['reference'], unique=False)
    op.create_index(op.f('ix_oarepo_references_version_reference_uuid'), 'oarepo_references_version', ['reference_uuid'], unique=False)
    op.create_index(op.f('ix_oarepo_references_version_transaction_id'), 'oarepo_references_version', ['transaction_id'], unique=False)
    op.create_table('oarepo_references_referencing_record',
    sa.Column('created', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), nullable=False),
    sa.Column('updated', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_uuid', sqlalchemy_utils.types.uuid.UUIDType(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['oarepo_references_classname.id'], name='fk_oarepo_references_class_id_classname', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_oarepo_references_referencing_record'))
    )
    op.create_index(op.f('ix_oarepo_references_referencing_record_record_uuid'), 'oarepo_references_referencing_record', ['record_uuid'], unique=True)
    op.create_table('oarepo_references',
    sa.Column('created', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), nullable=False),
    sa.Column('updated', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), nullable=False),
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('reference', sa.String(length=255), nullable=False),
    sa.Column('reference_uuid', sqlalchemy_utils.types.uuid.UUIDType(), nullable=True),
    sa.Column('inline', sa.Boolean(name='ck_oarepo_references_inline'), nullable=True),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['oarepo_references_referencing_record.id'], name='fk_oarepo_references_record_id_record', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_oarepo_references')),
    sa.UniqueConstraint('record_id', 'reference', name='uq_oarepo_references_record_id_reference')
    )
    op.create_index(op.f('ix_oarepo_references_reference'), 'oarepo_references', ['reference'], unique=False)
    op.create_index(op.f('ix_oarepo_references_reference_uuid'), 'oarepo_references', ['reference_uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_oarepo_references_reference_uuid'), table_name='oarepo_references')
    op.drop_index(op.f('ix_oarepo_references_reference'), table_name='oarepo_references')
    op.drop_table('oarepo_references')
    op.drop_index(op.f('ix_oarepo_references_referencing_record_record_uuid'), table_name='oarepo_references_referencing_record')
    op.drop_table('oarepo_references_referencing_record')
    op.drop_index(op.f('ix_oarepo_references_version_transaction_id'), table_name='oarepo_references_version')
    op.drop_index(op.f('ix_oarepo_references_version_reference_uuid'), table_name='oarepo_references_version')
    op.drop_index(op.f('ix_oarepo_references_version_reference'), table_name='oarepo_references_version')
    op.drop_index(op.f('ix_oarepo_references_version_operation_type'), table_name='oarepo_references_version')
    op.drop_index(op.f('ix_oarepo_references_version_end_transaction_id'), table_name='oarepo_references_version')
    op.drop_table('oarepo_references_version')
    op.drop_index(op.f('ix_oarepo_references_classname_name'), table_name='oarepo_references_classname')
    op.drop_table('oarepo_references_classname')
    # ### end Alembic commands ###
