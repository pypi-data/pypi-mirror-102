[metadata]
name = simple_imaging
version = 0.1.1
description = a simple digital image processing library
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/deadpyxel/simple_imaging
author = deadpyxel
author_email = ghost0092@gmail.com
license = MIT
license_file = LICENSE
classifiers = 
	Development Status :: 3 - Alpha
	License :: OSI Approved :: MIT License
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: Implementation :: CPython

[options]
packages = find:
python_requires = >=3.7

[options.packages.find]
exclude = 
	tests*
	testing*

[bdist_wheel]
universal = True

[bumpversion]
current_version = 0.1.1
commit = True
tag = True
message = bump: version {current_version} -> {new_version}

[bumpversion:file:setup.cfg]
search = {current_version}
replace = {new_version}

[bumpversion:file:README.md]
search = {current_version}
replace = {new_version}

[bumpversion:file:simple_imaging/__init__.py]
search = {current_version}
replace = {new_version}

[flake8]
enable-extensions = G
exclude = .git, .venv, __init__.py
ignore = E203,E501,W503,S101
max-line-length = 80
application-import-names = simple_imaging,tests

[coverage:run]
omit = tests/*,main.py,venv/*,setup.py

[coverage:report]
show_missing = True
exclude_lines = 
	pragma: no cover
	
	def __repr__
	if self\.debug
	
	raise AssertionError
	raise NotImplementedError
	
	if 0:
	if __name__ == .__main__.:

[mypy]
files = simple_imaging,tests,main.py
warn_unused_configs = True
check_untyped_defs = True
disallow_any_generics = True
disallow_incomplete_defs = True
disallow_untyped_defs = True
no_implicit_optional = True

[mypy-tests.*]
disallow_untyped_defs = False

[tool:pytest]
python_files = tests/test_*.py
markers = 
	fast: marks a test as a fast execution test.
	slow: marks a test as a slow execution test.
	adapter: marks a test belonging to the abstraction layer.

[egg_info]
tag_build = 
tag_date = 0

