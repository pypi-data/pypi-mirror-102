# Default pv.config file for GREECE model

# PV conversion model
# This file implements parameters for pv.py script
#
# All text after a hash (#) is regarded as a comment and
# will be ignored

#----------------------------
#           Inputs
#----------------------------

# Path to layer of GHI polygons (retrieved from solar GHI model)

POLYGON_LAYER=

# Solar GHI (path to csv file)

GHI=

# Solar GHI type {{irradiation}, irradiance}
GHI_TYPE=

# Should the model compute DNI and DHI using diffuse fraction ? {{true}, false}

USE_DIFFUSE_FRACTION=

# Diffuse fraction model {erbs}

DIFFUSE_FRACTION_MODEL=

# Direct normal irradiation (path to csv file)

DNI=

# Diffuse horizontal irradiation (path to csv file)

DHI=

#--------------------------------------
#           Climatic parameters
#--------------------------------------

# Air temperature in 째C {20}

AIR_TEMPERATURE=

# Wind speed in m/s {1}

WIND_SPEED=


# Albedo {0.2} --> urban: 0.18, grass: 0.2, fresh grass: 0.26, soil: 0.17, sand:0.4,
# snow: 0.65, fresh snow: 0.75, asphalt: 0.12, concrete: 0.3, aluminium: 0.85, 
# copper: 0.74, fresh steel: 0.35, dirty steel: 0.08, sea: 0.06

ALBEDO=

#-------------------------------------------
#           PV endogenous features
#-------------------------------------------

# See pvlib package (https://pypi.org/project/pvlib/)

# Surface tilt in 째 {0}

SURFACE_TILT=

# Surface azimuth in 째 {180} (180째 = south)

SURFACE_AZIMUTH=

# Module name from CEC and Sandia module database {Canadian_Solar_CS5P_220M___2009_}

MODULE_NAME=

# Inverter name from CEC inverter database {ABB__MICRO_0_25_I_OUTD_US_208_208V__CEC_2014_}

INVERTER_NAME=

# Modules per string {1}

MODULES_PER_STRING=

# Strings per inverter {1}

STRINGS_PER_INVERTER=

# Module typ {{glass_polymer}, glass_glass}

MODULE_TYPE=

# Racking model {{open_rack}, close_mount, insulated_back}

RACKING_MODEL=

# Ground coverage ratio {0.3}

GROUND_COVERAGE_RATIO=

# Use orientation strategy ? {true, {false}}

USE_ORIENTATION_STRATEGY=True

# Orientation strategy {flat, south_at_latitude_tilt}

ORIENTATION_STRATEGY=south_at_latitude_tilt

#----------------------------------------
#       Model specific parameters
#----------------------------------------

# PV aoi, dc, ac, and spectral models might be inferred from module characteristics

# Clear sky model {{ineichen}, haurwitz, simplified_solis}

CLEAR_SKY_MODEL=

# Sky diffuse model {isotropic, klucher, {haydavies}, reindl, king, perez}

SKY_DIFFUSE_MODEL=

# Air mass model {simple, kasten1966, youngirvine1967, {kastenyoung1989}, gueymard1993, young1994, pickering2002}

AIRMASS_MODEL=

# DC model {sapm, desoto, cec, pvsyst, pvwatts}

DC_MODEL=

# AC model {snlinverter, adrinverter, pvwatts}

AC_MODEL=

# AOI model (angle of incidence) {physical, ashrae, sapm, no_loss}

AOI_MODEL=

# Spectral model {sapm, first_solar, no_loss}

SPECTRAL_MODEL=

# Losses model {pvwatts, {no_loss}}

LOSSES_MODEL=

#---------------------------------
#       PVWATTS losses model
#---------------------------------

# See PVWATTS model for further information
# Losses model parameters (in %)

# Soiling

PVWATTS_SOILING=

# Shading

PVWATTS_SHADING=

# Snow

PVWATTS_SNOW=

# Mismatch

PVWATTS_MISMATCH=

# Wiring losses

PVWATTS_WIRING=

# Connections

PVWATTS_CONNECTIONS=

# LID losses

PVWATTS_LIGHT_INDUCED_DEGRADATION=

# Nameplate rating

PVWATTS_NAMEPLATE_RATING=

# Aging

PVWATTS_AGE=

# Availability

PVWATTS_AVAILABILITY=

#--------------------------------------
#           Power to Energy
#--------------------------------------

# Power to energy method. Integrate or average over time step {integration, {mean}}

POWER_TO_ENERGY_METHOD=

#-------------------------------------
#               Outputs
#-------------------------------------

# Save dc power table to {.csv}

SAVE_OUTPUT_DC_POWER_TO=

# Save output AC power table to

SAVE_OUTPUT_AC_POWER_TO=

# Save PV system features to {.csv}

SAVE_PV_SYSTEM_FEATURES_TO=
