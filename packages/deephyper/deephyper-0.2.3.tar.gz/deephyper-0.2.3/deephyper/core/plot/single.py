"""Neural architecture search single study.

usage::

    $ deephyper-analytics parse agebo_test2/agebo_test_2/deephyper.log
    $ deephyper-analytics notebook --type nas --output mynotebook.ipynb agebo_test2_2019-05-07_14.json
"""

import os
from deephyper.core.plot.jn_loader import NbEdit

HERE = os.path.dirname(os.path.abspath(__file__))


def single_analytics(path_to_data_file, nb_name):
    editor = NbEdit(os.path.join(HERE, 'stub/single_analytics.ipynb'),
    path_to_save=f"{nb_name}.ipynb")

    try:
        venv_name = os.environ.get('VIRTUAL_ENV').split('/')[-1]
        editor.setkernel(venv_name)
    except:
        pass

    editor.edit(0, "{{path_to_data_file}}", path_to_data_file)

    editor.edit(1, "{{path_to_data_file}}", f"'{path_to_data_file}'")

    editor.write()

    editor.execute()


def add_subparser(subparsers):
    subparser_name = 'single'
    function_to_call = main

    parser_parse = subparsers.add_parser(
        subparser_name, help='Tool to generate analytics on a single NAS experiment (jupyter notebook).')
    parser_parse.add_argument('-p', '--path', type=str, help='A Json file generated by "deephyper-analytics parse".')
    parser_parse.add_argument('-n', '--name', type=str, default='dh-analytics-single', help='Jupyter notebook name.')

    return subparser_name, function_to_call


def main(path, name, *args, **kwargs):
    single_analytics(path_to_data_file=path, nb_name=name)
