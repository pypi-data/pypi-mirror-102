Metadata-Version: 2.1
Name: blip-alpha
Version: 0.0.9
Summary: A bayesian pipeline for detecting stochastic backgrounds with LISA.
Home-page: UNKNOWN
Author: Sharan Banagiri
Author-email: banag002@umn.edu
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: ChainConsumer (==0.31.0)
Requires-Dist: Cython (==0.29.16)
Requires-Dist: astropy (==4.0.1.post1)
Requires-Dist: corner (==2.0.1)
Requires-Dist: cycler (==0.10.0)
Requires-Dist: dynesty (==1.0.1)
Requires-Dist: healpy (==1.13.0)
Requires-Dist: kiwisolver (==1.2.0)
Requires-Dist: matplotlib (==3.2.1)
Requires-Dist: mpmath (==1.1.0)
Requires-Dist: numpy (==1.18.3)
Requires-Dist: pandas (==1.0.3)
Requires-Dist: patsy (==0.5.1)
Requires-Dist: pyparsing (==2.4.7)
Requires-Dist: python-dateutil (==2.8.1)
Requires-Dist: pytz (==2019.3)
Requires-Dist: scipy (==1.4.1)
Requires-Dist: six (==1.14.0)
Requires-Dist: statsmodels (==0.11.1)
Requires-Dist: sympy (==1.6)

#  BLIP: Bayesian LISA Pipeline



This is a bayesian pipeline for detecting stochastic backgrounds with LISA. BLIP stands for Bayesian LIsa Pipeline fully written in python


1) It is easier to maintain and run python code in virtual environments. Make a new virtualenv by doing

`python3 -m venv lisaenv`

2) Source it on linux or Mac by doing

`source lisaenv/bin/activate`

For Windows, source it by 

`activate`  while in `\lisawork\Scripts`


3) We need numpy, scipy for running this and matplotlib and chainconsumer are required for plotting. Install them all by doing

`pip install numpy scipy matplotlib chainconsumer`

4) We also need the healpy, the skymap package

`pip install healpy`

5) The sampler [dynesty](https://dynesty.readthedocs.io/en/latest/) is used for nested sampling. We get both the posteriors and bayesian evidence from it. The latter is the detection statistic. Install dynesty by doing

`pip install dynesty`

6) Some functionality also needs cython

`pip install cython`

7) You can change the parameters and the signal model in params.ini

To run do `python run_blip.py params.ini`

Posterior plots are automatically made in the output directory specified in params.ini


8) If you want to generate local documentation pages you also need sphinx

`pip install sphinx`

**Note**: The code is setup to work with python 3 and might not work with python2
More documentation at https://blip.readthedocs.io/en/latest/


