Metadata-Version: 2.1
Name: gami
Version: 0.0.6.post0.dev3
Summary: Scaffold your data and produce random values.
Home-page: https://github.com/WesRoach/gami
Author: Gami Authors
Author-email: wesr000@gmail.com
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Provides-Extra: dev
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: black ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'

# gami

[![pytest](https://github.com/WesRoach/gami/workflows/pytest/badge.svg)](https://github.com/WesRoach/gami/actions?query=workflow%3Apytest)
[![Linting](https://github.com/WesRoach/gami/workflows/Linting/badge.svg)](https://github.com/WesRoach/gami/actions?query=workflow%3ALinting)
[![License](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/WesRoach/gami/blob/main/LICENSE)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

Define data structure and produce fake data.

[![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/WesRoach/gami)

## Introduction

Gami is a framework for defining DataFrame structures. Gami makes it easy to define what your data looks like and share that information between multiple applications.

- Create variables
  - Define variable type
  - Define allowed values for variable
- Assign variables to DataFrames, called Entities
- Create Entities by referencing existing data
- Decompose existing data into allowed sets of values for variables
- A lot of this is handled already by `featuretools`

## Usage

```python
import gami

sales = gami.entity(
    {
        "id": str,
        "name": str,
    }
)
```


