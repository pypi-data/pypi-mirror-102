{"version":3,"sources":["webpack:///./app/actionCreators/release.tsx","webpack:///./app/actions/releaseActions.tsx","webpack:///./app/components/notAvailable.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/stores/releaseStore.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/views/sharedGroupDetails/sharedGroupHeader.tsx","webpack:///./app/views/sharedGroupDetails/index.tsx"],"names":["getProjectRelease","api","params","orgSlug","projectSlug","releaseVersion","path","encodeURIComponent","ReleaseStore","getReleaseStoreKey","ReleaseActions","requestPromise","method","then","res","err","status","Sentry","scope","setLevel","setFingerprint","getReleaseDeploys","archiveRelease","addLoadingMessage","t","data","ReleaseStatus","projects","version","release","addSuccessMessage","error","addErrorMessage","responseJSON","detail","restoreRelease","Reflux","NotAvailable","tooltip","Wrapper","title","disabled","defined","p","theme","gray200","SentryDocumentTitle","children","docTitle","ReleaseStoreConfig","state","undefined","Map","releaseLoading","releaseError","deploys","deploysLoading","deploysError","listenables","init","this","listenTo","OrganizationActions","updateOrganization","reset","trigger","org","slug","loadRelease","releaseKey","loadReleaseError","loadReleaseSuccess","loadDeploys","loadDeploysError","loadDeploysSuccess","get","DiscoverQuery","props","route","withApi","GenericDiscoverQuery","isLoading","tableFetchID","tableData","pageLinks","prevProps","thisAPIPayload","getPayload","otherAPIPayload","isAPIPayloadSimilar","limit","cursor","beforeFetch","afterFetch","eventView","setError","noPagination","referrer","isValid","url","Symbol","apiPayload","setState","per_page","doDiscoverQuery","jqXHR","prevState","getResponseHeader","fetchData","refetchCondition","_shouldRefetchData","eventViewValidation","shouldRefetchExternal","shouldRefetchData","getRequestPayload","getEventsAPIPayload","location","childrenProps","React","includeAllArgs","query","TransactionFilterOptions","transactionSummaryRouteWithQuery","transaction","projectID","unselectedSeries","display","trendFunction","trendColumn","showTransactions","pathname","project","environment","statsPeriod","start","end","SidebarSpacer","space","SharedGroupHeader","group","Details","Title","isUnhandled","message","culprit","border","fontSizeExtraLarge","breakpoints","headerFontSize","overflowEllipsis","SharedGroupDetails","getInitialState","loading","document","body","classList","add","remove","shareId","onRetry","handleRetry","permalink","latestEvent","getTitle","className","to","Container","organization","event","isShare","SentryTypes"],"mappings":"0dAmBO,SAASA,EAAkBC,EAAaC,GAAmB,IACzDC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,eACvBC,EAAO,aAAH,OAAgBH,EAAhB,YAA2BC,EAA3B,qBAAmDG,mBAC3DF,GADQ,KAYV,OALAG,0BACEC,OAAmBL,EAAaC,KAC9B,EACJK,gBAA2BP,EAASC,EAAaC,GAE1CJ,EACJU,eAAeL,EAAM,CACpBM,OAAQ,QAETC,MAAK,SAACC,GACLJ,uBAAkCN,EAAaC,EAAgBS,MAL5D,OAOE,SAAAC,GAEc,MAAfA,EAAIC,QAKRN,qBAAgCN,EAAaC,EAAgBU,GAC7DE,MAAiB,SAAAC,GACfA,EAAMC,SAASF,aACfC,EAAME,eAAe,CAAC,8BACtBH,KAAwBF,OARxBL,uBAAkCN,EAAaC,EAAgB,SAahE,SAASgB,EAAkBpB,EAAaC,GAAmB,IACzDC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,eACvBC,EAAO,kBAAH,OAAqBH,EAArB,qBAAyCI,mBACjDF,GADQ,aAUV,OALAG,0BACEC,OAAmBL,EAAaC,KAC9B,EACJK,gBAA2BP,EAASC,EAAaC,GAE1CJ,EACJU,eAAeL,EAAM,CACpBM,OAAQ,QAETC,MAAK,SAACC,GACLJ,uBAAkCN,EAAaC,EAAgBS,MAL5D,OAOE,SAAAC,GAEc,MAAfA,EAAIC,QAKRN,qBAAgCN,EAAaC,EAAgBU,GAC7DE,MAAiB,SAAAC,GACfA,EAAMC,SAASF,aACfC,EAAME,eAAe,CAAC,qCACtBH,KAAwBF,OARxBL,uBAAkCN,EAAaC,EAAgB,SAahE,SAASiB,EAAerB,EAAaC,GAAmB,IACtDC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,eAK7B,OAHAK,gBAA2BP,EAASC,EAAaC,IACjDkB,SAAkBC,OAAE,uBAEbvB,EACJU,eADI,yBAC6BR,EAD7B,cACkD,CACrDS,OAAQ,OACRa,KAAM,CACJT,OAAQU,cACRC,SAAU,GACVC,QAASvB,KAGZQ,MAAK,SAACgB,GACLnB,uBAAkCN,EAAaC,EAAgBwB,IAC/DC,SAAkBN,OAAE,0CAXjB,OAaE,SAAAO,GAAS,QAKd,MAJArB,qBAAgCN,EAAaC,EAAgB0B,IAC7DC,QAAe,oBACbD,EAAME,oBADO,aACb,EAAoBC,cADP,SACiBV,OAAE,sCAE5BO,KAIL,SAASI,EAAelC,EAAaC,GAAmB,IACtDC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,eAK7B,OAHAK,gBAA2BP,EAASC,EAAaC,IACjDkB,SAAkBC,OAAE,uBAEbvB,EACJU,eADI,yBAC6BR,EAD7B,cACkD,CACrDS,OAAQ,OACRa,KAAM,CACJT,OAAQU,YACRC,SAAU,GACVC,QAASvB,KAGZQ,MAAK,SAACgB,GACLnB,uBAAkCN,EAAaC,EAAgBwB,IAC/DC,SAAkBN,OAAE,0CAXjB,OAaE,SAAAO,GAAS,QAKd,MAJArB,qBAAgCN,EAAaC,EAAgB0B,IAC7DC,QAAe,oBACbD,EAAME,oBADO,aACb,EAAoBC,cADP,SACiBV,OAAE,sCAE5BO,O,mIC7IZ,Q,MAAeK,iBAAqB,CAClC,cACA,mBACA,qBACA,cACA,mBACA,wB,sVCEF,SAASC,EAAT,GAAwC,IAAjBC,EAAiB,EAAjBA,QACrB,OACE,QAACC,EAAD,MACE,QAAC,IAAD,CAASC,MAAOF,EAASG,WAAWC,QAAQJ,IACzC,MAJAD,E,2BAUT,IAAME,GAAU,OAAO,MAAP,qCAAH,UACF,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,UADX,KAIb,W,kRCbA,SAASC,EAAT,GAA6E,IAA/CN,EAA+C,EAA/CA,MAAOrC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,YAAa2C,EAAkB,EAAlBA,SAiBnDC,EAfC7C,GAAYC,EAIbD,GAAWC,EACb,UAAUoC,EAAV,cAAqBrC,EAArB,cAAkCC,GAGhCD,EACF,UAAUqC,EAAV,cAAqBrC,GAGvB,UAAUqC,EAAV,cAAqBpC,GAXZoC,EAgBX,OAAO,QAAC,IAAD,CAAeA,MAAK,UAAKQ,EAAL,cAA2BD,GAnB/CD,E,kCAsBT,W,88BCUO,IAAMrC,EAAqB,SAACL,EAAqBC,GAAtB,gBAC7BD,GAD6B,OACfC,IAEb4C,EAAqE,CACzEC,MAAO,CACL/C,aAASgD,EACTtB,QAAS,IAAIuB,IACbC,eAAgB,IAAID,IACpBE,aAAc,IAAIF,IAClBG,QAAS,IAAIH,IACbI,eAAgB,IAAIJ,IACpBK,aAAc,IAAIL,KAGpBM,YAAahD,IAEbiD,KAbyE,WAcvEC,KAAKC,SAASC,WAA4BF,KAAKG,oBAC/CH,KAAKI,SAGPA,MAlByE,WAmBvEJ,KAAKV,MAAQ,CACX/C,aAASgD,EACTtB,QAAS,IAAIuB,IACbC,eAAgB,IAAID,IACpBE,aAAc,IAAIF,IAClBG,QAAS,IAAIH,IACbI,eAAgB,IAAIJ,IACpBK,aAAc,IAAIL,KAEpBQ,KAAKK,QAAQL,KAAKV,QAGpBa,mBA/ByE,SA+BtDG,GACjBN,KAAKI,QACLJ,KAAKV,MAAM/C,QAAU+D,EAAIC,KACzBP,KAAKK,QAAQL,KAAKV,QAGpBkB,YArCyE,SAqC7DjE,EAAiBC,EAAqBC,GAE3CuD,KAAKzD,SAAWyD,KAAKzD,UAAYA,IACpCyD,KAAKI,QACLJ,KAAKzD,QAAUA,GAGjB,IAAMkE,EAAa5D,EAAmBL,EAAaC,GAPqB,EAQvBuD,KAAKV,MAA/CG,EARiE,EAQjEA,eAAgBC,EARiD,EAQjDA,aAAiBJ,GARgC,4CAUxEU,KAAKV,MAAL,OACKA,GADL,IAEEG,eAAgB,EAAF,KACTA,GADS,cAEXgB,GAAa,IAEhBf,aAAc,EAAF,KACPA,GADO,cAETe,OAAalB,MAGlBS,KAAKK,QAAQL,KAAKV,QAGpBoB,iBA7DyE,SA6DxDlE,EAAqBC,EAAwB0B,GAC5D,IAAMsC,EAAa5D,EAAmBL,EAAaC,GADuB,EAEzBuD,KAAKV,MAA/CG,EAFmE,EAEnEA,eAAgBC,EAFmD,EAEnDA,aAAiBJ,GAFkC,4CAI1EU,KAAKV,MAAL,OACKA,GADL,IAEEG,eAAgB,EAAF,KACTA,GADS,cAEXgB,GAAa,IAEhBf,aAAc,EAAF,KACPA,GADO,cAETe,EAAatC,MAGlB6B,KAAKK,QAAQL,KAAKV,QAGpBqB,mBA/EyE,SA+EtDnE,EAAqBC,EAAwBoB,GAC9D,IAAM4C,EAAa5D,EAAmBL,EAAaC,GAD0B,EAEnBuD,KAAKV,MAAxDrB,EAFsE,EAEtEA,QAASwB,EAF6D,EAE7DA,eAAgBC,EAF6C,EAE7CA,aAAiBJ,GAF4B,sDAG7EU,KAAKV,MAAL,OACKA,GADL,IAEErB,QAAS,EAAF,KACFA,GADE,cAEJwC,EAAa5C,IAEhB4B,eAAgB,EAAF,KACTA,GADS,cAEXgB,GAAa,IAEhBf,aAAc,EAAF,KACPA,GADO,cAETe,OAAalB,MAGlBS,KAAKK,QAAQL,KAAKV,QAGpBsB,YApGyE,SAoG7DrE,EAAiBC,EAAqBC,GAE3CuD,KAAKzD,SAAWyD,KAAKzD,UAAYA,IACpCyD,KAAKI,QACLJ,KAAKzD,QAAUA,GAGjB,IAAMkE,EAAa5D,EAAmBL,EAAaC,GAPqB,EAQvBuD,KAAKV,MAA/CM,EARiE,EAQjEA,eAAgBC,EARiD,EAQjDA,aAAiBP,GARgC,4CAUxEU,KAAKV,MAAL,OACKA,GADL,IAEEM,eAAgB,EAAF,KACTA,GADS,cAEXa,GAAa,IAEhBZ,aAAc,EAAF,KACPA,GADO,cAETY,OAAalB,MAGlBS,KAAKK,QAAQL,KAAKV,QAGpBuB,iBA5HyE,SA4HxDrE,EAAqBC,EAAwB0B,GAC5D,IAAMsC,EAAa5D,EAAmBL,EAAaC,GADuB,EAEzBuD,KAAKV,MAA/CM,EAFmE,EAEnEA,eAAgBC,EAFmD,EAEnDA,aAAiBP,GAFkC,4CAI1EU,KAAKV,MAAL,OACKA,GADL,IAEEM,eAAgB,EAAF,KACTA,GADS,cAEXa,GAAa,IAEhBZ,aAAc,EAAF,KACPA,GADO,cAETY,EAAatC,MAGlB6B,KAAKK,QAAQL,KAAKV,QAGpBwB,mBA9IyE,SA8ItDtE,EAAqBC,EAAwBoB,GAC9D,IAAM4C,EAAa5D,EAAmBL,EAAaC,GAD0B,EAEnBuD,KAAKV,MAAxDK,EAFsE,EAEtEA,QAASC,EAF6D,EAE7DA,eAAgBC,EAF6C,EAE7CA,aAAiBP,GAF4B,sDAI7EU,KAAKV,MAAL,OACKA,GADL,IAEEK,QAAS,EAAF,KACFA,GADE,cAEJc,EAAa5C,IAEhB+B,eAAgB,EAAF,KACTA,GADS,cAEXa,GAAa,IAEhBZ,aAAc,EAAF,KACPA,GADO,cAETY,OAAalB,MAGlBS,KAAKK,QAAQL,KAAKV,QAGpByB,IApKyE,SAoKrEvE,EAAqBC,GACvB,IAAMgE,EAAa5D,EAAmBL,EAAaC,GAEnD,MAAO,CACLwB,QAAS+B,KAAKV,MAAMrB,QAAQwC,GAC5BhB,eAAgBO,KAAKV,MAAMG,eAAegB,GAC1Cf,aAAcM,KAAKV,MAAMI,aAAae,GACtCd,QAASK,KAAKV,MAAMK,QAAQc,GAC5Bb,eAAgBI,KAAKV,MAAMM,eAAea,GAC1CZ,aAAcG,KAAKV,MAAMO,aAAaY,MAS5C,QAFqBjC,gBAAmBa,I,qWC3MxC,SAAS2B,EAAcC,GACrB,OAAO,QAAC,KAAD,QAAqCC,MAAM,YAAeD,IAD1DD,E,4BAIT,SAAeG,OAAQH,I,0iDC6DjBI,E,wnBACc,CAChBC,WAAW,EACXC,kBAAc/B,EACdpB,MAAO,KAEPoD,UAAW,KACXC,UAAW,Q,wCA+BQ,SAACC,GACpB,IAAMC,EAAiB,EAAKC,WAAW,EAAKV,OACtCW,EAAkB,EAAKD,WAAWF,GAExC,QACGI,QAAoBH,EAAgBE,IACrCH,EAAUK,QAAU,EAAKb,MAAMa,OAC/BL,EAAUP,QAAU,EAAKD,MAAMC,OAC/BO,EAAUM,SAAW,EAAKd,MAAMc,W,gDAIxB,mIAaN,EAAKd,MAXP5E,EAFQ,EAERA,IACA2F,EAHQ,EAGRA,YACAC,EAJQ,EAIRA,WACAC,EALQ,EAKRA,UACA3F,EANQ,EAMRA,QACA2E,EAPQ,EAORA,MACAY,EARQ,EAQRA,MACAC,EATQ,EASRA,OACAI,EAVQ,EAURA,SACAC,EAXQ,EAWRA,aACAC,EAZQ,EAYRA,SAGGH,EAAUI,UAfL,wDAmBJC,EAnBI,yBAmBoBhG,EAnBpB,YAmB+B2E,EAnB/B,KAoBJI,EAAekB,OAAO,gBACtBC,EAAkD,EAAKd,WAAW,EAAKV,OAE7E,EAAKyB,SAAS,CAACrB,WAAW,EAAMC,iBAEhCa,gBAAW5C,GAEPuC,IACFW,EAAWE,SAAWb,GAEpBM,IACFK,EAAWL,aAAeA,GAExBL,IACFU,EAAWV,OAASA,GAElBM,IACFI,EAAWJ,SAAWA,GAGxBL,WAAc3F,GAxCJ,oBA2CsBuG,EAAmBvG,EAAKkG,EAAKE,GA3CnD,mCA2CD5E,EA3CC,KA2COgF,EA3CP,KA4CJ,EAAKvD,MAAMgC,eAAiBA,EA5CxB,mDAiDFC,EAAYU,EAAaA,EAAWpE,EAAM,EAAKoD,OAASpD,EAE9D,EAAK6E,UAAS,SAAAI,GAAS,YAAK,CAC1BzB,WAAW,EACXC,kBAAc/B,EACdpB,MAAO,KACPqD,UAAS,UAAEqB,aAAF,EAAEA,EAAOE,kBAAkB,eAA3B,QAAsCD,EAAUtB,UACzDD,gBAxDM,mDA2DFpD,GAAQ,2CAAKE,oBAAL,eAAmBC,UAAUV,OAAE,8BAC7C,EAAK8E,SAAS,CACZrB,WAAW,EACXC,kBAAc/B,EACdpB,QACAoD,UAAW,OAETY,GACFA,EAAShE,GAnEH,4D,kDAxCZ,WACE6B,KAAKgD,c,gCAGP,SAAmBvB,GAEjB,IAAMwB,GAAoBjD,KAAKV,MAAM+B,WAAarB,KAAKkD,mBAAmBzB,GAGpE0B,GAC8B,IAAlC1B,EAAUS,UAAUI,WAAuBtC,KAAKiB,MAAMiB,UAAUI,UAE5Dc,IAAwBpD,KAAKiB,MAAMoC,mBACrCrD,KAAKiB,MAAMoC,kBAAkB5B,EAAWzB,KAAKiB,QAG7CgC,GAAoBE,GAAuBC,IAC7CpD,KAAKgD,c,wBAIT,SAAW/B,GACT,OAAIjB,KAAKiB,MAAMqC,kBACNtD,KAAKiB,MAAMqC,kBAAkBrC,GAE/BA,EAAMiB,UAAUqB,oBAAoBtC,EAAMuC,Y,oBAuFnD,WAAS,MAC0CxD,KAAKV,MAEhDmE,EAAyC,CAC7CpC,UAJK,EACAA,UAILlD,MALK,EACWA,MAKhBoD,UANK,EACkBA,UAMvBC,UAPK,EAC6BA,WAQ9BrC,EAAsCa,KAAKiB,MAAM9B,SACvD,OAAOA,aAAP,EAAOA,EAAWsE,O,GApImBC,aA0IlC,SAAed,EAAtB,sC,wCAAO,WACLvG,EACAkG,EACAjG,GAHK,0FAKED,EAAIU,eAAewF,EAAK,CAC7BvF,OAAQ,MACR2G,gBAAgB,EAChBC,MAAO,EAAF,GAECtH,MAVH,4C,sBA1ID8E,E,mCAyJN,W,sHC1OYyC,E,mHAWL,SAASC,EAAT,GAoBJ,IAxBI,EAKLvH,EAmBC,EAnBDA,QACAwH,EAkBC,EAlBDA,YACAC,EAiBC,EAjBDA,UACAJ,EAgBC,EAhBDA,MAgBC,IAfDK,wBAeC,MAfkB,SAelB,EAdDC,EAcC,EAdDA,QACAC,EAaC,EAbDA,cACAC,EAYC,EAZDA,YACAC,EAWC,EAXDA,iBAgBA,MAAO,CACLC,UA9BG,EAyB4C,CAC/C/H,WAzBF,yBADoF,EAArCA,QAC/C,0BA8BEqH,MAAO,CACLG,cACAQ,QAASP,EACTQ,YAAaZ,EAAMY,YACnBC,YAAab,EAAMa,YACnBC,MAAOd,EAAMc,MACbC,IAAKf,EAAMe,IACXf,MAAOA,EAAMA,MACbK,mBACAI,mBACAH,UACAC,gBACAC,iB,SAlDMP,K,kBAAAA,E,YAAAA,E,kBAAAA,E,iBAAAA,M,KAuDL,IAAMe,GAAgB,OAAO,MAAP,4CAAH,eACVC,OAAM,GADI,M,mlDC9CpBC,EAAoB,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACxB,QAACpG,EAAD,MACE,QAACqG,EAAD,MACE,QAACC,EAAD,KAAQF,EAAMnG,QACd,QAAC,IAAD,KACGmG,EAAMG,cAAe,QAAC,IAAD,OACtB,QAAC,IAAD,CAAcC,QAASJ,EAAMK,cAN/BN,E,gCAYN,UAEA,IAAMnG,GAAU,OAAO,MAAP,qCAAH,YACAkG,OAAM,GADN,KACYA,OAAM,GADlB,KACwBA,OAAM,GAD9B,KACoCA,OAAM,GAD1C,mBAEM,SAAA9F,GAAC,0BAAiBA,EAAEC,MAAMqG,UAFhC,sEAKGR,OAAM,GALT,KAQPG,GAAU,OAAO,MAAP,qCAAH,0DAMPC,GAAQ,OAAO,KAAP,mCAAH,6BAEKJ,OAAM,GAFX,wDAKI,SAAA9F,GAAC,OAAIA,EAAEC,MAAMsG,qBALjB,uBAMY,SAAArE,GAAK,OAAIA,EAAMjC,MAAMuG,YAAY,KAN7C,gBAOM,SAAAxG,GAAC,OAAIA,EAAEC,MAAMwG,iBAPnB,oBASLC,IATK,M,ICdLC,E,0nBAKW,EAAKC,oB,iCAuCN,WACZ,EAAKjD,SAAS,EAAKiD,mBACnB,EAAK3C,e,gDAvCP,WACE,MAAO,CACL+B,MAAO,KACPa,SAAS,EACTzH,OAAO,K,6BAIX,WACE,MAAO,CACL4G,MAAO/E,KAAKV,MAAMyF,S,gCAItB,WACEc,SAASC,KAAKC,UAAUC,IAAI,kB,+BAG9B,WACEhG,KAAKgD,c,kCAGP,WACE6C,SAASC,KAAKC,UAAUE,OAAO,kB,4CAGjC,qGACwBjG,KAAKiB,MAApB3E,EADT,EACSA,OAAQD,EADjB,EACiBA,IACR6J,EAAW5J,EAAX4J,QAFT,kBAIwB7J,EAAIU,eAAJ,yBAAqCmJ,EAArC,MAJxB,OAIUnB,EAJV,OAKI/E,KAAK0C,SAAS,CAACkD,SAAS,EAAOb,UALnC,gDAOI/E,KAAK0C,SAAS,CAACkD,SAAS,EAAOzH,OAAO,IAP1C,yD,mEAgBA,WAAW,IACF4G,EAAS/E,KAAKV,MAAdyF,MAEP,OAAIA,EACKA,EAAMnG,MAGR,W,oBAGT,WAAS,MACyBoB,KAAKV,MAA9ByF,EADA,EACAA,MAAOa,EADP,EACOA,QAASzH,EADhB,EACgBA,MAEvB,GAAIyH,EACF,OAAO,QAAC,IAAD,MAGT,IAAKb,EACH,OAAO,QAAC,IAAD,MAGT,GAAI5G,EACF,OAAO,QAAC,IAAD,CAAcgI,QAASnG,KAAKoG,cAZ9B,MAeiBpG,KAAKiB,MAAtBuC,EAfA,EAeAA,SAAUnH,EAfV,EAeUA,IACVgK,EAAmCtB,EAAnCsB,UAAWC,EAAwBvB,EAAxBuB,YAAa/B,EAAWQ,EAAXR,QACzB3F,EAAQoB,KAAKuG,WAEnB,OACE,QAAC,IAAD,CAAe3H,MAAOA,IACpB,eAAK4H,UAAU,QACb,eAAKA,UAAU,gBACf,eAAKA,UAAU,cACb,eAAKA,UAAU,kBACb,eAAKA,UAAU,eACb,QAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,MACxB,gBAAMD,UAAU,2BAEjBH,IACC,QAAC,IAAD,CAAMG,UAAU,UAAUC,GAAIJ,IAC3BzI,OAAE,cAIT,eAAK4I,UAAU,YACb,QAAC,EAAD,CAAmBzB,MAAOA,KAC1B,QAAC2B,EAAD,CAAWF,UAAU,2CACnB,QAAC,IAAD,CACEhD,SAAUA,EACVmD,aAAcpC,EAAQoC,aACtB5B,MAAOA,EACP6B,MAAON,EACP/B,QAASA,EACTlI,IAAKA,EACLwK,SAAO,MAGX,QAAC,IAAD,e,GA3GiBnD,aAA3BgC,E,yCAAAA,E,oBACuB,CACzBX,MAAO+B,aAmHX,IAAMJ,GAAY,OAAO,MAAP,uCAAH,cACA7B,OAAM,GADN,KAKf,SAAe1D,OAAQuE","file":"SharedGroupDetails.js","sourcesContent":["import * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport ReleaseActions from 'app/actions/releaseActions';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport ReleaseStore, {getReleaseStoreKey} from 'app/stores/releaseStore';\nimport {Deploy, Release, ReleaseStatus} from 'app/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n  projectSlug: string;\n  releaseVersion: string;\n};\n\nexport function getProjectRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/`;\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRelease for the same\n  // release to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  ReleaseStore.state.releaseLoading[\n    getReleaseStoreKey(projectSlug, releaseVersion)\n  ] = true;\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel(Sentry.Severity.Warning);\n        scope.setFingerprint(['getRelease-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function getReleaseDeploys(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/organizations/${orgSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/deploys/`;\n\n  // HACK(leedongwei): Same as above\n  ReleaseStore.state.deploysLoading[\n    getReleaseStoreKey(projectSlug, releaseVersion)\n  ] = true;\n  ReleaseActions.loadDeploys(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Deploy[]) => {\n      ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadDeploysError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel(Sentry.Severity.Warning);\n        scope.setFingerprint(['getReleaseDeploys-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function archiveRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Archiving Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Archived,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully archived.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be archived.')\n      );\n      throw error;\n    });\n}\n\nexport function restoreRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Restoring Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Active,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully restored.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be restored.')\n      );\n      throw error;\n    });\n}\n","import Reflux from 'reflux';\n\nexport default Reflux.createActions([\n  'loadRelease', // Singular as it loads 1 release\n  'loadReleaseError',\n  'loadReleaseSuccess',\n  'loadDeploys', // Plural as it loads all deploys related to a release\n  'loadDeploysError',\n  'loadDeploysSuccess',\n]);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Tooltip from 'app/components/tooltip';\nimport {defined} from 'app/utils';\n\ntype Props = {\n  tooltip?: React.ReactNode;\n};\n\nfunction NotAvailable({tooltip}: Props) {\n  return (\n    <Wrapper>\n      <Tooltip title={tooltip} disabled={!defined(tooltip)}>\n        {'\\u2014'}\n      </Tooltip>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled('div')`\n  color: ${p => p.theme.gray200};\n`;\n\nexport default NotAvailable;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return <DocumentTitle title={`${docTitle} - Sentry`}>{children}</DocumentTitle>;\n}\n\nexport default SentryDocumentTitle;\n","import Reflux from 'reflux';\n\nimport OrganizationActions from 'app/actions/organizationActions';\nimport ReleaseActions from 'app/actions/releaseActions';\nimport {Deploy, Organization, Release} from 'app/types';\n\ntype StoreRelease = Map<string, Release>;\ntype StoreDeploys = Map<string, Array<Deploy>>;\ntype StoreLoading = Map<string, boolean>;\ntype StoreError = Map<string, Error>;\n\ntype ReleaseStoreInterface = {\n  get(\n    projectSlug: string,\n    releaseVersion: string\n  ): {\n    release: Release | undefined;\n    releaseLoading: boolean | undefined;\n    releaseError: Error | undefined;\n    deploys: Array<Deploy> | undefined;\n    deploysLoading: boolean | undefined;\n    deploysError: Error | undefined;\n  };\n\n  state: {\n    orgSlug: string | undefined;\n    release: StoreRelease;\n    releaseLoading: StoreLoading;\n    releaseError: StoreError;\n    deploys: StoreDeploys;\n    deploysLoading: StoreLoading;\n    deploysError: StoreError;\n  };\n\n  updateOrganization(org: Organization): void;\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error): void;\n};\n\nexport const getReleaseStoreKey = (projectSlug: string, releaseVersion: string) =>\n  `${projectSlug}${releaseVersion}`;\n\nconst ReleaseStoreConfig: Reflux.StoreDefinition & ReleaseStoreInterface = {\n  state: {\n    orgSlug: undefined,\n    release: new Map() as StoreRelease,\n    releaseLoading: new Map() as StoreLoading,\n    releaseError: new Map() as StoreError,\n    deploys: new Map() as StoreDeploys,\n    deploysLoading: new Map() as StoreLoading,\n    deploysError: new Map() as StoreError,\n  },\n\n  listenables: ReleaseActions,\n\n  init() {\n    this.listenTo(OrganizationActions.update, this.updateOrganization);\n    this.reset();\n  },\n\n  reset() {\n    this.state = {\n      orgSlug: undefined,\n      release: new Map() as StoreRelease,\n      releaseLoading: new Map() as StoreLoading,\n      releaseError: new Map() as StoreError,\n      deploys: new Map() as StoreDeploys,\n      deploysLoading: new Map() as StoreLoading,\n      deploysError: new Map() as StoreError,\n    };\n    this.trigger(this.state);\n  },\n\n  updateOrganization(org: Organization) {\n    this.reset();\n    this.state.orgSlug = org.slug;\n    this.trigger(this.state);\n  },\n\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: true,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {release, releaseLoading, releaseError, ...state} = this.state;\n    this.state = {\n      ...state,\n      release: {\n        ...release,\n        [releaseKey]: data,\n      },\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: true,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploys, deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploys: {\n        ...deploys,\n        [releaseKey]: data,\n      },\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  get(projectSlug: string, releaseVersion: string) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n\n    return {\n      release: this.state.release[releaseKey],\n      releaseLoading: this.state.releaseLoading[releaseKey],\n      releaseError: this.state.releaseError[releaseKey],\n      deploys: this.state.deploys[releaseKey],\n      deploysLoading: this.state.deploysLoading[releaseKey],\n      deploysError: this.state.deploysError[releaseKey],\n    };\n  },\n};\n\ntype ReleaseStore = Reflux.Store & ReleaseStoreInterface;\n\nconst ReleaseStore = Reflux.createStore(ReleaseStoreConfig) as ReleaseStore;\n\nexport default ReleaseStore;\n","import React from 'react';\n\nimport {MetaType} from 'app/utils/discover/eventView';\nimport withApi from 'app/utils/withApi';\n\nimport GenericDiscoverQuery, {DiscoverQueryProps} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  id: string;\n  [key: string]: React.ReactText;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\nfunction DiscoverQuery(props: DiscoverQueryProps) {\n  return <GenericDiscoverQuery<TableData, {}> route=\"eventsv2\" {...props} />;\n}\n\nexport default withApi(DiscoverQuery);\n","import React from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'app/actionCreators/events';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport EventView, {\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'app/utils/discover/eventView';\n\nexport type GenericChildrenProps<T> = {\n  isLoading: boolean;\n  error: null | string;\n  tableData: T | null;\n  pageLinks: null | string;\n};\n\nexport type DiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  eventView: EventView;\n  orgSlug: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n  /**\n   * A callback to set an error so that the error can be rendered in parent components\n   */\n  setError?: (msg: string | undefined) => void;\n  /**\n   * Sets referrer parameter in the API Payload. Set of allowed referrers are defined\n   * on the OrganizationEventsV2Endpoint view.\n   */\n  referrer?: string;\n};\n\ntype RequestProps<P> = DiscoverQueryProps & P;\n\ntype ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype Props<T, P> = RequestProps<P> &\n  ReactProps<T> & {\n    /**\n     * Route to the endpoint\n     */\n    route: string;\n    /**\n     * Allows components to modify the payload before it is set.\n     */\n    getRequestPayload?: (props: Props<T, P>) => any;\n    /**\n     * An external hook in addition to the event view check to check if data should be refetched\n     */\n    shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n    /**\n     * A hook before fetch that can be used to do things like clearing the api\n     */\n    beforeFetch?: (api: Client) => void;\n    /**\n     * A hook to modify data into the correct output after data has been received\n     */\n    afterFetch?: (data: any, props?: Props<T, P>) => T;\n  };\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass GenericDiscoverQuery<T, P> extends React.Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if we aren't already loading,\n    const refetchCondition = !this.state.isLoading && this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    if (this.props.getRequestPayload) {\n      return this.props.getRequestPayload(props);\n    }\n    return props.eventView.getEventsAPIPayload(props.location);\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  fetchData = async () => {\n    const {\n      api,\n      beforeFetch,\n      afterFetch,\n      eventView,\n      orgSlug,\n      route,\n      limit,\n      cursor,\n      setError,\n      noPagination,\n      referrer,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    if (limit) {\n      apiPayload.per_page = limit;\n    }\n    if (noPagination) {\n      apiPayload.noPagination = noPagination;\n    }\n    if (cursor) {\n      apiPayload.cursor = cursor;\n    }\n    if (referrer) {\n      apiPayload.referrer = referrer;\n    }\n\n    beforeFetch?.(api);\n\n    try {\n      const [data, , jqXHR] = await doDiscoverQuery<T>(api, url, apiPayload);\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: jqXHR?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = err?.responseJSON?.detail || t('An unknown error occurred.');\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\nexport async function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams\n): Promise<[T, string | undefined, JQueryXHR | undefined]> {\n  return api.requestPromise(url, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      // marking params as any so as to not cause typescript errors\n      ...(params as any),\n    },\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import styled from '@emotion/styled';\nimport {Query} from 'history';\n\nimport space from 'app/styles/space';\n\nimport {DisplayModes} from './charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  display?: DisplayModes;\n  trendFunction?: string;\n  trendColumn?: string;\n  unselectedSeries?: string | string[];\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n    },\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport EventMessage from 'app/components/events/eventMessage';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\n\nimport UnhandledTag, {\n  TagAndMessageWrapper,\n} from '../organizationGroupDetails/unhandledTag';\n\ntype Props = {\n  group: Group;\n};\n\nconst SharedGroupHeader = ({group}: Props) => (\n  <Wrapper>\n    <Details>\n      <Title>{group.title}</Title>\n      <TagAndMessageWrapper>\n        {group.isUnhandled && <UnhandledTag />}\n        <EventMessage message={group.culprit} />\n      </TagAndMessageWrapper>\n    </Details>\n  </Wrapper>\n);\n\nexport default SharedGroupHeader;\n\nconst Wrapper = styled('div')`\n  padding: ${space(3)} ${space(4)} ${space(3)} ${space(4)};\n  border-bottom: ${p => `1px solid ${p.theme.border}`};\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.03);\n  position: relative;\n  margin: 0 0 ${space(3)};\n`;\n\nconst Details = styled('div')`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\n// TODO(style): the color #161319 is not yet in the color object of the theme\nconst Title = styled('h3')`\n  color: #161319;\n  margin: 0 0 ${space(1)};\n  overflow-wrap: break-word;\n  line-height: 1.2;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  @media (min-width: ${props => props.theme.breakpoints[0]}) {\n    font-size: ${p => p.theme.headerFontSize};\n    line-height: 1.1;\n    ${overflowEllipsis};\n  }\n`;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'app/api';\nimport NotFound from 'app/components/errors/notFound';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport Footer from 'app/components/footer';\nimport Link from 'app/components/links/link';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport {Group} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\nimport SharedGroupHeader from './sharedGroupHeader';\n\ntype Props = RouteComponentProps<{shareId: string}, {}> & {\n  api: Client;\n};\n\ntype State = {\n  group: Group | null;\n  loading: boolean;\n  error: boolean;\n};\n\nclass SharedGroupDetails extends React.Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n  };\n\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    return {\n      group: null,\n      loading: true,\n      error: false,\n    };\n  }\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n    };\n  }\n\n  componentWillMount() {\n    document.body.classList.add('shared-group');\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('shared-group');\n  }\n\n  async fetchData() {\n    const {params, api} = this.props;\n    const {shareId} = params;\n    try {\n      const group = await api.requestPromise(`/shared/issues/${shareId}/`);\n      this.setState({loading: false, group});\n    } catch {\n      this.setState({loading: false, error: true});\n    }\n  }\n\n  handleRetry = () => {\n    this.setState(this.getInitialState());\n    this.fetchData();\n  };\n\n  getTitle() {\n    const {group} = this.state;\n\n    if (group) {\n      return group.title;\n    }\n\n    return 'Sentry';\n  }\n\n  render() {\n    const {group, loading, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!group) {\n      return <NotFound />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.handleRetry} />;\n    }\n\n    const {location, api} = this.props;\n    const {permalink, latestEvent, project} = group;\n    const title = this.getTitle();\n\n    return (\n      <DocumentTitle title={title}>\n        <div className=\"app\">\n          <div className=\"pattern-bg\" />\n          <div className=\"container\">\n            <div className=\"box box-modal\">\n              <div className=\"box-header\">\n                <Link className=\"logo\" to=\"/\">\n                  <span className=\"icon-sentry-logo-full\" />\n                </Link>\n                {permalink && (\n                  <Link className=\"details\" to={permalink}>\n                    {t('Details')}\n                  </Link>\n                )}\n              </div>\n              <div className=\"content\">\n                <SharedGroupHeader group={group} />\n                <Container className=\"group-overview event-details-container\">\n                  <BorderlessEventEntries\n                    location={location}\n                    organization={project.organization}\n                    group={group}\n                    event={latestEvent}\n                    project={project}\n                    api={api}\n                    isShare\n                  />\n                </Container>\n                <Footer />\n              </div>\n            </div>\n          </div>\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  padding: 0 ${space(4)};\n`;\n\nexport {SharedGroupDetails};\nexport default withApi(SharedGroupDetails);\n"],"sourceRoot":""}