# -*- coding: utf-8 -*-

"""
    signing

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from signing.api_helper import APIHelper
from signing.configuration import Configuration
from signing.controllers.base_controller import BaseController
from signing.http.auth.o_auth_2 import OAuth2

class MiscController(BaseController):

    """A Controller to access Endpoints in the signing API."""


    def get_users(self,
                  email):
        """Does a GET request to /users.

        TODO: type endpoint description here.

        Args:
            email (string): TODO: type description here. Example: 

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/users'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_parameters = {
            'email': email
        }
        _query_builder = APIHelper.append_url_with_query_parameters(_query_builder,
            _query_parameters, Configuration.array_serialization)
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare and execute request
        _request = self.http_client.get(_query_url)
        OAuth2.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

    def login(self,
                content_type,
                username,
                password,
                client_id,
                client_secret,
                grant_type,
                scope):
        """Does a POST request to /oauth/token.

        TODO: type endpoint description here.

        Args:
            content_type (string): TODO: type description here. Example: 
            username (string): TODO: type description here. Example: 
            password (string): TODO: type description here. Example: 
            client_id (string): TODO: type description here. Example: 
            client_secret (string): TODO: type description here. Example: 
            grant_type (string): TODO: type description here. Example: 
            scope (string): TODO: type description here. Example: 

        Returns:
            void: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/oauth/token'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare form parameters
        _form_parameters = {
            'username': username,
            'password': password,
            'client_id': client_id,
            'client_secret': client_secret,
            'grant_type': grant_type,
            'scope': scope
        }

        # Prepare and execute request
        _request = self.http_client.post(_query_url, parameters=_form_parameters)
        OAuth2.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)
