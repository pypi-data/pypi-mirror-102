Metadata-Version: 2.1
Name: TimeTaggerRPC
Version: 0.0.2a0
Summary: RPC for Swabian Instruments' Time Tagger
Home-page: http://pypi.python.org/pypi/TimeTaggerRPC/
License: BSD 3-Clause
Author: Igor Shavrin
Author-email: igor@swabianinstruments.com
Requires-Python: >=3.6,<4
Description-Content-Type: text/markdown
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering
Requires-Dist: Pyro5
Requires-Dist: numpy
Project-URL: Hardware, https://www.swabianinstruments.com/time-tagger/


**!!! This is an experimental version !!!**

Time Tagger RPC implementation using [Pyro5](https://pypi.org/project/Pyro5/).


### Install

```
> pip install TimeTaggerRPC
```

### Run server
Start the server on a PC with the Time Tagger connected.

```
> TimeTaggerRPC-server
```

### Client example
Control Time Tagger remotely over the network.


```python
import matplotlib.pyplot as plt
from TimeTaggerRPC import client

with client.createProxy(host='localhost', port=23000) as TT:
   tagger = TT.createTimeTagger()

   hist = TT.Correlation(tagger, 1, 2, binwidth=10, n_bins=2000)
   hist.startFor(int(10e12), clear=True)

   x = hist.getIndex()
   while hist.isRunning():
      plt.pause(0.1)
      y = hist.getData()
      plt.plot(x, y)

   TT.freeTimeTagger(tagger)
   del hist, tagger
   
```
