[tool.poetry]
name = "metaphor-connectors"
version = "0.1.3"
description = ""
authors = ["Metaphor <dev@metaphor.io>"]
packages = [
    { include = "metaphor" },
]
include = ["metaphor/common/metadata_change_event.json"]

[tool.poetry.dependencies]
asyncpg = { version = "~=0.22.0", optional = true }
aws-assume-role-lib = "^1.3.0"
boto3 = "~=1.17.40"
botocore = "~=1.20.40"
dataclasses-json = "^0.5.2"
fastjsonschema = "~=2.15.0"
google-api-python-client = { version = "~=2.1.0", optional = true }
google-auth-oauthlib = { version = "~=0.4.4", optional = true }
python = "~=3.7"
python-dateutil = "~=2.8.1"
smart-open = "^5.0.0"
snowflake-connector-python = { version = "~=2.4.1", optional = true }

[tool.poetry.extras]
all = [
  "asyncpg",
  "google-api-python-client",
  "google-auth-oauthlib",
  "snowflake-connector-python",
]
dbt = []
postgresql = ["asyncpg"]
snowflake = ["snowflake-connector-python"]
google = ["google-api-python-client","google-auth-oauthlib"]

[tool.poetry.dev-dependencies]
black = "^20.8b1"
isort = "^5.8.0"
mypy = "^0.812"
pytest = "^6.2.2"
pytest-asyncio = "^0.14.0"
flakehell = "^0.9.0"
freezegun = "^1.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
force-exclude = '(^/metaphor/common/metadata_change_event.py)'

[tool.isort]
profile = "black"
extend_skip = [
  ".serverless",
  "metaphor/common/metadata_change_event.py"
]

[tool.flakehell]
format = "colored"

[tool.flakehell.plugins]
pycodestyle = ["+*", "-E501", "-W503"]
pyflakes = ["+*"]

[tool.flakehell.exceptions."metaphor/common/metadata_change_event.py"]
pycodestyle = ["-*"]
pyflakes = ["-*"]