{"version":3,"sources":["DiffViewer.tsx","index.tsx"],"names":["P","window","Prism","console","log","DiffViewer","render","highlightSyntax","oldValue","props","args","newValue","str","language","highlight","languages","python","dangerouslySetInnerHTML","__html","yaml","renderContent","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"2QAOMA,EAAKC,OAAeC,MAC1BC,QAAQC,IAAIJ,G,IAMNK,E,4MAGGC,OAAS,WAKd,IAEIC,EAFEC,EAAW,EAAKC,MAAMC,KAAX,UAA+B,GAC1CC,EAAW,EAAKF,MAAMC,KAAX,UAA+B,GAyBhD,OAtBEH,EAD8B,WAA5B,EAAKE,MAAMC,KAAX,KACgB,SAACE,GACjB,IAAKA,EAAK,OAAO,+BACjB,IAAMC,EAAWb,EAAEc,UAAUF,EAAKZ,EAAEe,UAAUC,QAC9C,OAAO,0BAAMC,wBAAyB,CAAEC,OAAQL,MAEb,SAA5B,EAAKJ,MAAMC,KAAX,KACS,SAACE,GACjB,IAAKA,EAAK,OAAO,+BACjB,IAAMC,EAAWb,EAAEc,UAAUF,EAAKZ,EAAEe,UAAUI,MAC9C,OAAO,0BAAMF,wBAAyB,CAAEC,OAAQL,MAGhC,SAACD,GACjB,OAAKA,EACE,8BAAOA,GADG,gCAUnB,kBAAC,IAAD,CAAiBJ,SAAUA,EAAUG,SAAUA,EAAUS,cAAeb,K,YAnCrDc,KAwCRC,cAAwBjB,GClDzCkB,IAASjB,OACP,kBAAC,IAAMkB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d8ab51cc.chunk.js","sourcesContent":["import {\n  StreamlitComponentBase,\n  withStreamlitConnection\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\"\nimport ReactDiffViewer from 'react-diff-viewer';\n\nconst P = (window as any).Prism;\nconsole.log(P)\n/**\n* This is a React-based component template. The `render()` function is called\n* automatically when your component should be re-rendered.\n*/\n// console.log( Prism.languages)\nclass DiffViewer extends StreamlitComponentBase {\n  \n  \n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"name\" arg.\n    \n    \n    const oldValue = this.props.args[\"old_text\"] || ''\n    const newValue = this.props.args[\"new_text\"] || ''\n    let highlightSyntax;\n    if( this.props.args[\"lang\"] === \"python\"){\n      highlightSyntax = (str: String) => {\n        if (!str) return <span></span>;\n        const language = P.highlight(str, P.languages.python);\n        return <span dangerouslySetInnerHTML={{ __html: language }} />;\n      };\n    }else if ( this.props.args[\"lang\"] === \"yaml\"){\n      highlightSyntax = (str: String) => {\n        if (!str) return <span></span>;\n        const language = P.highlight(str, P.languages.yaml);\n        return <span dangerouslySetInnerHTML={{ __html: language }} />;\n      };\n    }else{\n      highlightSyntax = (str: String) => {\n        if (!str) return <span></span>;\n        return <span>{str}</span>;\n      };\n    }\n    \n    // Show a button and some text.\n    // When the button is clicked, we'll increment our \"numClicks\" state\n    // variable, and send its new value back to Streamlit, where it'll\n    // be available to the Python program.\n    return (\n      <ReactDiffViewer oldValue={oldValue} newValue={newValue} renderContent={highlightSyntax}></ReactDiffViewer> \n      )\n    }\n  }\n  \n  export default withStreamlitConnection(DiffViewer)\n  ","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport DiffViewer from \"./DiffViewer\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <DiffViewer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}